- hosts: mgmt
  gather_facts: 'no'
  vars_files:
    - vars/vars.yaml
  environment:
    USE_GKE_GCLOUD_AUTH_PLUGIN: True
  tasks:
    - name: Install required packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - gnupg
          - curl
          - tinyproxy
        state: present
        update_cache: yes
        cache_valid_time: 86400
      become: true
      become_user: root

    - name: Download GPG key for Cloud SDK repository
      shell: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor > /usr/share/keyrings/cloud.google.gpg
      become: true
      become_user: root
    - name: Add Cloud SDK repository
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
        state: present
      become: true
      become_user: root 

    - name: Install gcloud kubectl and gke-auth-plugin
      apt:
        pkg:
          - google-cloud-cli
          - google-cloud-sdk-gke-gcloud-auth-plugin
          - kubectl
        state: present
      become: true
      become_user: root

    - name: Enable bash completion for kubectl
      shell:
        cmd: kubectl completion bash > /etc/bash_completion.d/kubectl
        creates: /etc/bash_completion.d/kubectl
      become: true
      become_user: root
    - name: Get cluster credentials
      shell: >
        gcloud container clusters get-credentials {{ cluster }} 
        --region {{ region }} 
        --project {{ project_id }} 
        --internal-ip
    #tinyproxy
    - block:
        - name: Check if logfile exists.
          ansible.builtin.stat:
            path: '/var/log/tinyproxy/tinyproxy.log'
          register: logfile_status

        - name: Check for Allow localhost rule
          lineinfile:
            path: /etc/tinyproxy/tinyproxy.conf
            line: Allow localhost
            regexp: '^Allow localhost$' # Only modify if line doesn't exist
            insertafter: EOF
            state: present
          register: allow_localhost

        - name: Create tinyproxy log file
          file:
            path: /var/log/tinyproxy/tinyproxy.log
            state: touch
            mode: '0744'
            owner: tinyproxy
            group: tinyproxy
          register: create_logfile
          when: not logfile_status.stat.exists

        - name: Restart tinyproxy
          service:
            name: tinyproxy
            state: restarted
          when: allow_localhost.changed or create_logfile.changed
      become: true
      become_user: root
